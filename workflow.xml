<tool id='alvaro_singlecluster_parsl_demo' name='alvaro_singlecluster_parsl_demo'>
  <command interpreter='bash'>parsl_wrapper.sh</command>
  <inputs>
    <section name='gpu_executor' type='section' title='GPU Executor' expanded='true'>
      <param 
        name='gpu_resource_name' 
        label='Resource Name' 
        type='text' 
        value='awsv2'
        help='Name of the PW resource to train the CVAE model' 
        width='50%'>
      </param>
      <param 
        name='gpu_load_pytorch' 
        label='Load PyTorch Command' 
        type='text' 
        help='Command to load PyTorch using conda activate, module load, etc' 
        value='source /contrib/__PW_USER__/pw/miniconda3/etc/profile.d/conda.sh; conda activate pytorch-gpu' 
        width='50%'>
      </param>
       <conditional name="gpu_executor_cond">
          <param name='gpu_jobschedulertype' type='select' label='Select Controller, SLURM Partition or PBS Queue' help='Job will submitted using SSH, sbatch or qsub, respectively' width='50%_none' multiple='false'>
            <option value="CONTROLLER" selected="true">Controller</option>
            <option value="SLURM">SLURM Partition</option>
            <option value="PBS">PBS Queue</option>
        </param>
        <when value="SLURM">
            <param name='gpu_sch__dd_partition_e_' label='SLURM partition' type='text' help='Partition to submit the interactive job. Leave empty to let SLURM pick the optimal option.' value='gpu' width='50%_none'>
            </param>
            <param name='gpu_scheduler_directives' label='Scheduler directives' type='text' help='e.g. --mem=1000;--gpus-per-node=1 - Use the semicolon character ; to separate parameters. Do not include the SBATCH keyword.' value='--time=00:20:00;--nodes=1;--exclusive' width='100%_none'>
            </param>
        </when>
        <when value="PBS">
            <param name='gpu_sch__d_q___' label='PBS queue' type='text' help='Queue to submit the interactive job. Must select one! Use [qstat -f -Q] to list all queues on the system' value='' width='50%_none'>
            </param>
            <param name='gpu_scheduler_directives' label='Scheduler directives' type='text' help='e.g. -l mem=1000;-l nodes=1:ppn=4 - Use the semicolon character ; to separate parameters. Do not include the PBS keyword.' value='-l walltime=00:20:00;-l nodes=1;-l naccesspolicy=SINGLEJOB -n' width='100%_none'>
            </param>
        </when>
      </conditional>
    </section>
    <section name='cpu_executor' type='section' title='CPU Executor' expanded='true'>
      <param 
        name='cpu_resource_name' 
        label='Resource Name' 
        type='text' 
        value='koehr'
        help='Name of the PW resource to generate synthetic data' 
        width='50%'>
      </param>
      <param 
        name='cpu_load_pytorch' 
        label='Load PyTorch Command' 
        type='text' 
        help='Command to load PyTorch using conda activate, module load, etc' 
        value='source /p/home/avidalto/miniconda3/etc/profile.d/conda.sh; conda activate pytorch-cpu' 
        width='50%'>
      </param>
      <conditional name="cpu_executor_cond">
          <param name='cpu_jobschedulertype' type='select' label='Select Controller, SLURM Partition or PBS Queue' help='Job will submitted using SSH, sbatch or qsub, respectively' width='50%_none' multiple='false'>
            <option value="CONTROLLER" selected="true">Controller</option>
            <option value="SLURM">SLURM Partition</option>
            <option value="PBS">PBS Queue</option>
        </param>
        <when value="SLURM">
            <param name='cpu_sch__dd_partition_e_' label='SLURM partition' type='text' help='Partition to submit the interactive job. Leave empty to let SLURM pick the optimal option.' value='' width='50%_none'>
            </param>
            <param name='cpu_scheduler_directives' label='Scheduler directives' type='text' help='e.g. --mem=1000;--gpus-per-node=1 - Use the semicolon character ; to separate parameters. Do not include the SBATCH keyword.' value='--time=00:20:00;--nodes=1;--exclusive' width='100%_none'>
            </param>
        </when>
        <when value="PBS">
            <param name='cpu_sch__d_q___' label='PBS queue' type='text' help='Queue to submit the interactive job. Must select one! Use [qstat -f -Q] to list all queues on the system' value='debug' width='50%_none'>
            </param>
            <param name='cpu_scheduler_directives' label='Scheduler directives' type='text' help='e.g. -l mem=1000;-l nodes=1:ppn=4 - Use the semicolon character ; to separate parameters. Do not include the PBS keyword.' value='-l walltime=00:20:00;-l select=1:ncpus=44:mpiprocs=44;-A HPCMO49636PRW' width='100%_none'>
            </param>
        </when>
      </conditional>
    </section>
    <section name='train' type='section' title='Train' expanded='true'>
      <param 
        name='latent_size' 
        label='Latent Size' 
        type='integer' 
        min='1' 
        max='10' 
        help='Latent dimension of the encoded space' 
        value='2' 
        width='50%'>
      </param>
      <param 
        name='num_epochs' 
        label='Number of Epochs' 
        type='integer' 
        min='1' 
        max='1000' 
        value='10'
        width='50%'>
      </param>
      <param 
        name='learning_rate' 
        label='Learning Rate' 
        type='text' 
        value='0.001' 
        width='50%'>
      </param>
    </section>
    <section name='generate' type='section' title='Generate Digits' expanded='true'>
      <param 
        name='num_digits' 
        label='Number of Digits' 
        type='integer' 
        min='2' 
        max='1000' 
        help='Number of digits to generate' 
        value='10' 
        width='50%'>
      </param>
    </section>
  </inputs>
  <outputs>
  </outputs>
</tool>
